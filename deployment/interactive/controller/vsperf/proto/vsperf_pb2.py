# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vsperf.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='vsperf.proto',
  package='vsperf',
  syntax='proto3',
  serialized_pb=_b('\n\x0cvsperf.proto\x12\x06vsperf\"3\n\rControlVsperf\x12\x10\n\x08testtype\x18\x01 \x01(\t\x12\x10\n\x08\x63onffile\x18\x02 \x01(\t\"/\n\x0b\x43ontrolTGen\x12\x0e\n\x06params\x18\x01 \x01(\t\x12\x10\n\x08\x63onffile\x18\x02 \x01(\t\"\x1b\n\x06LogDir\x12\x11\n\tdirectory\x18\x01 \x01(\t\"\x1b\n\x08\x43onfFile\x12\x0f\n\x07\x43ontent\x18\x01 \x01(\x0c\"2\n\x08HostInfo\x12\n\n\x02ip\x18\x01 \x01(\t\x12\r\n\x05uname\x18\x02 \x01(\t\x12\x0b\n\x03pwd\x18\x03 \x01(\t\"/\n\tHugepConf\x12\r\n\x05hpmax\x18\x01 \x01(\t\x12\x13\n\x0bhprequested\x18\x02 \x01(\t\"F\n\x0bHostVerInfo\x12\n\n\x02ip\x18\x01 \x01(\t\x12\r\n\x05uname\x18\x02 \x01(\t\x12\x0b\n\x03pwd\x18\x03 \x01(\t\x12\x0f\n\x07version\x18\x04 \x01(\t\"\x1f\n\x0bStatusQuery\x12\x10\n\x08testtype\x18\x01 \x01(\t\"\x1e\n\x0bStatusReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"G\n\x0cUploadStatus\x12\x0f\n\x07Message\x18\x01 \x01(\t\x12&\n\x04\x43ode\x18\x02 \x01(\x0e\x32\x18.vsperf.UploadStatusCode*3\n\x10UploadStatusCode\x12\x0b\n\x07Unknown\x10\x00\x12\x06\n\x02Ok\x10\x01\x12\n\n\x06\x46\x61iled\x10\x02\x32\xb5\x04\n\nController\x12\x36\n\x0bHostConnect\x12\x10.vsperf.HostInfo\x1a\x13.vsperf.StatusReply\"\x00\x12\x38\n\rVsperfInstall\x12\x10.vsperf.HostInfo\x1a\x13.vsperf.StatusReply\"\x00\x12:\n\x0fTGenHostConnect\x12\x10.vsperf.HostInfo\x1a\x13.vsperf.StatusReply\"\x00\x12\x39\n\x0bTGenInstall\x12\x13.vsperf.HostVerInfo\x1a\x13.vsperf.StatusReply\"\x00\x12\x42\n\x14TGenUploadConfigFile\x12\x10.vsperf.ConfFile\x1a\x14.vsperf.UploadStatus\"\x00(\x01\x12:\n\x0f\x43ollectdInstall\x12\x10.vsperf.HostInfo\x1a\x13.vsperf.StatusReply\"\x00\x12\x42\n\x14\x43ollectdUploadConfig\x12\x10.vsperf.ConfFile\x1a\x14.vsperf.UploadStatus\"\x00(\x01\x12=\n\x11\x44utHugepageConfig\x12\x11.vsperf.HugepConf\x1a\x13.vsperf.StatusReply\"\x00\x12;\n\x10\x43heckDependecies\x12\x10.vsperf.HostInfo\x1a\x13.vsperf.StatusReply\"\x00\x62\x06proto3')
)

_UPLOADSTATUSCODE = _descriptor.EnumDescriptor(
  name='UploadStatusCode',
  full_name='vsperf.UploadStatusCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Unknown', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Ok', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Failed', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=495,
  serialized_end=546,
)
_sym_db.RegisterEnumDescriptor(_UPLOADSTATUSCODE)

UploadStatusCode = enum_type_wrapper.EnumTypeWrapper(_UPLOADSTATUSCODE)
Unknown = 0
Ok = 1
Failed = 2



_CONTROLVSPERF = _descriptor.Descriptor(
  name='ControlVsperf',
  full_name='vsperf.ControlVsperf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='testtype', full_name='vsperf.ControlVsperf.testtype', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conffile', full_name='vsperf.ControlVsperf.conffile', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=75,
)


_CONTROLTGEN = _descriptor.Descriptor(
  name='ControlTGen',
  full_name='vsperf.ControlTGen',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='params', full_name='vsperf.ControlTGen.params', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='conffile', full_name='vsperf.ControlTGen.conffile', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=124,
)


_LOGDIR = _descriptor.Descriptor(
  name='LogDir',
  full_name='vsperf.LogDir',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='directory', full_name='vsperf.LogDir.directory', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=126,
  serialized_end=153,
)


_CONFFILE = _descriptor.Descriptor(
  name='ConfFile',
  full_name='vsperf.ConfFile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Content', full_name='vsperf.ConfFile.Content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=155,
  serialized_end=182,
)


_HOSTINFO = _descriptor.Descriptor(
  name='HostInfo',
  full_name='vsperf.HostInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='vsperf.HostInfo.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uname', full_name='vsperf.HostInfo.uname', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pwd', full_name='vsperf.HostInfo.pwd', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=234,
)


_HUGEPCONF = _descriptor.Descriptor(
  name='HugepConf',
  full_name='vsperf.HugepConf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hpmax', full_name='vsperf.HugepConf.hpmax', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hprequested', full_name='vsperf.HugepConf.hprequested', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=283,
)


_HOSTVERINFO = _descriptor.Descriptor(
  name='HostVerInfo',
  full_name='vsperf.HostVerInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='vsperf.HostVerInfo.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uname', full_name='vsperf.HostVerInfo.uname', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pwd', full_name='vsperf.HostVerInfo.pwd', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='version', full_name='vsperf.HostVerInfo.version', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=355,
)


_STATUSQUERY = _descriptor.Descriptor(
  name='StatusQuery',
  full_name='vsperf.StatusQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='testtype', full_name='vsperf.StatusQuery.testtype', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=357,
  serialized_end=388,
)


_STATUSREPLY = _descriptor.Descriptor(
  name='StatusReply',
  full_name='vsperf.StatusReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='vsperf.StatusReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=390,
  serialized_end=420,
)


_UPLOADSTATUS = _descriptor.Descriptor(
  name='UploadStatus',
  full_name='vsperf.UploadStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Message', full_name='vsperf.UploadStatus.Message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Code', full_name='vsperf.UploadStatus.Code', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=422,
  serialized_end=493,
)

_UPLOADSTATUS.fields_by_name['Code'].enum_type = _UPLOADSTATUSCODE
DESCRIPTOR.message_types_by_name['ControlVsperf'] = _CONTROLVSPERF
DESCRIPTOR.message_types_by_name['ControlTGen'] = _CONTROLTGEN
DESCRIPTOR.message_types_by_name['LogDir'] = _LOGDIR
DESCRIPTOR.message_types_by_name['ConfFile'] = _CONFFILE
DESCRIPTOR.message_types_by_name['HostInfo'] = _HOSTINFO
DESCRIPTOR.message_types_by_name['HugepConf'] = _HUGEPCONF
DESCRIPTOR.message_types_by_name['HostVerInfo'] = _HOSTVERINFO
DESCRIPTOR.message_types_by_name['StatusQuery'] = _STATUSQUERY
DESCRIPTOR.message_types_by_name['StatusReply'] = _STATUSREPLY
DESCRIPTOR.message_types_by_name['UploadStatus'] = _UPLOADSTATUS
DESCRIPTOR.enum_types_by_name['UploadStatusCode'] = _UPLOADSTATUSCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ControlVsperf = _reflection.GeneratedProtocolMessageType('ControlVsperf', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLVSPERF,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.ControlVsperf)
  ))
_sym_db.RegisterMessage(ControlVsperf)

ControlTGen = _reflection.GeneratedProtocolMessageType('ControlTGen', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLTGEN,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.ControlTGen)
  ))
_sym_db.RegisterMessage(ControlTGen)

LogDir = _reflection.GeneratedProtocolMessageType('LogDir', (_message.Message,), dict(
  DESCRIPTOR = _LOGDIR,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.LogDir)
  ))
_sym_db.RegisterMessage(LogDir)

ConfFile = _reflection.GeneratedProtocolMessageType('ConfFile', (_message.Message,), dict(
  DESCRIPTOR = _CONFFILE,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.ConfFile)
  ))
_sym_db.RegisterMessage(ConfFile)

HostInfo = _reflection.GeneratedProtocolMessageType('HostInfo', (_message.Message,), dict(
  DESCRIPTOR = _HOSTINFO,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.HostInfo)
  ))
_sym_db.RegisterMessage(HostInfo)

HugepConf = _reflection.GeneratedProtocolMessageType('HugepConf', (_message.Message,), dict(
  DESCRIPTOR = _HUGEPCONF,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.HugepConf)
  ))
_sym_db.RegisterMessage(HugepConf)

HostVerInfo = _reflection.GeneratedProtocolMessageType('HostVerInfo', (_message.Message,), dict(
  DESCRIPTOR = _HOSTVERINFO,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.HostVerInfo)
  ))
_sym_db.RegisterMessage(HostVerInfo)

StatusQuery = _reflection.GeneratedProtocolMessageType('StatusQuery', (_message.Message,), dict(
  DESCRIPTOR = _STATUSQUERY,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.StatusQuery)
  ))
_sym_db.RegisterMessage(StatusQuery)

StatusReply = _reflection.GeneratedProtocolMessageType('StatusReply', (_message.Message,), dict(
  DESCRIPTOR = _STATUSREPLY,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.StatusReply)
  ))
_sym_db.RegisterMessage(StatusReply)

UploadStatus = _reflection.GeneratedProtocolMessageType('UploadStatus', (_message.Message,), dict(
  DESCRIPTOR = _UPLOADSTATUS,
  __module__ = 'vsperf_pb2'
  # @@protoc_insertion_point(class_scope:vsperf.UploadStatus)
  ))
_sym_db.RegisterMessage(UploadStatus)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class ControllerStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.HostConnect = channel.unary_unary(
          '/vsperf.Controller/HostConnect',
          request_serializer=HostInfo.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )
      self.VsperfInstall = channel.unary_unary(
          '/vsperf.Controller/VsperfInstall',
          request_serializer=HostInfo.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )
      self.TGenHostConnect = channel.unary_unary(
          '/vsperf.Controller/TGenHostConnect',
          request_serializer=HostInfo.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )
      self.TGenInstall = channel.unary_unary(
          '/vsperf.Controller/TGenInstall',
          request_serializer=HostVerInfo.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )
      self.TGenUploadConfigFile = channel.stream_unary(
          '/vsperf.Controller/TGenUploadConfigFile',
          request_serializer=ConfFile.SerializeToString,
          response_deserializer=UploadStatus.FromString,
          )
      self.CollectdInstall = channel.unary_unary(
          '/vsperf.Controller/CollectdInstall',
          request_serializer=HostInfo.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )
      self.CollectdUploadConfig = channel.stream_unary(
          '/vsperf.Controller/CollectdUploadConfig',
          request_serializer=ConfFile.SerializeToString,
          response_deserializer=UploadStatus.FromString,
          )
      self.DutHugepageConfig = channel.unary_unary(
          '/vsperf.Controller/DutHugepageConfig',
          request_serializer=HugepConf.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )
      self.CheckDependecies = channel.unary_unary(
          '/vsperf.Controller/CheckDependecies',
          request_serializer=HostInfo.SerializeToString,
          response_deserializer=StatusReply.FromString,
          )


  class ControllerServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def HostConnect(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def VsperfInstall(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TGenHostConnect(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TGenInstall(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def TGenUploadConfigFile(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CollectdInstall(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CollectdUploadConfig(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DutHugepageConfig(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CheckDependecies(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_ControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'HostConnect': grpc.unary_unary_rpc_method_handler(
            servicer.HostConnect,
            request_deserializer=HostInfo.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
        'VsperfInstall': grpc.unary_unary_rpc_method_handler(
            servicer.VsperfInstall,
            request_deserializer=HostInfo.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
        'TGenHostConnect': grpc.unary_unary_rpc_method_handler(
            servicer.TGenHostConnect,
            request_deserializer=HostInfo.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
        'TGenInstall': grpc.unary_unary_rpc_method_handler(
            servicer.TGenInstall,
            request_deserializer=HostVerInfo.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
        'TGenUploadConfigFile': grpc.stream_unary_rpc_method_handler(
            servicer.TGenUploadConfigFile,
            request_deserializer=ConfFile.FromString,
            response_serializer=UploadStatus.SerializeToString,
        ),
        'CollectdInstall': grpc.unary_unary_rpc_method_handler(
            servicer.CollectdInstall,
            request_deserializer=HostInfo.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
        'CollectdUploadConfig': grpc.stream_unary_rpc_method_handler(
            servicer.CollectdUploadConfig,
            request_deserializer=ConfFile.FromString,
            response_serializer=UploadStatus.SerializeToString,
        ),
        'DutHugepageConfig': grpc.unary_unary_rpc_method_handler(
            servicer.DutHugepageConfig,
            request_deserializer=HugepConf.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
        'CheckDependecies': grpc.unary_unary_rpc_method_handler(
            servicer.CheckDependecies,
            request_deserializer=HostInfo.FromString,
            response_serializer=StatusReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'vsperf.Controller', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaControllerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def HostConnect(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def VsperfInstall(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TGenHostConnect(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TGenInstall(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def TGenUploadConfigFile(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CollectdInstall(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CollectdUploadConfig(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DutHugepageConfig(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CheckDependecies(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaControllerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def HostConnect(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    HostConnect.future = None
    def VsperfInstall(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    VsperfInstall.future = None
    def TGenHostConnect(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    TGenHostConnect.future = None
    def TGenInstall(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    TGenInstall.future = None
    def TGenUploadConfigFile(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    TGenUploadConfigFile.future = None
    def CollectdInstall(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CollectdInstall.future = None
    def CollectdUploadConfig(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CollectdUploadConfig.future = None
    def DutHugepageConfig(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DutHugepageConfig.future = None
    def CheckDependecies(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    CheckDependecies.future = None


  def beta_create_Controller_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('vsperf.Controller', 'CheckDependecies'): HostInfo.FromString,
      ('vsperf.Controller', 'CollectdInstall'): HostInfo.FromString,
      ('vsperf.Controller', 'CollectdUploadConfig'): ConfFile.FromString,
      ('vsperf.Controller', 'DutHugepageConfig'): HugepConf.FromString,
      ('vsperf.Controller', 'HostConnect'): HostInfo.FromString,
      ('vsperf.Controller', 'TGenHostConnect'): HostInfo.FromString,
      ('vsperf.Controller', 'TGenInstall'): HostVerInfo.FromString,
      ('vsperf.Controller', 'TGenUploadConfigFile'): ConfFile.FromString,
      ('vsperf.Controller', 'VsperfInstall'): HostInfo.FromString,
    }
    response_serializers = {
      ('vsperf.Controller', 'CheckDependecies'): StatusReply.SerializeToString,
      ('vsperf.Controller', 'CollectdInstall'): StatusReply.SerializeToString,
      ('vsperf.Controller', 'CollectdUploadConfig'): UploadStatus.SerializeToString,
      ('vsperf.Controller', 'DutHugepageConfig'): StatusReply.SerializeToString,
      ('vsperf.Controller', 'HostConnect'): StatusReply.SerializeToString,
      ('vsperf.Controller', 'TGenHostConnect'): StatusReply.SerializeToString,
      ('vsperf.Controller', 'TGenInstall'): StatusReply.SerializeToString,
      ('vsperf.Controller', 'TGenUploadConfigFile'): UploadStatus.SerializeToString,
      ('vsperf.Controller', 'VsperfInstall'): StatusReply.SerializeToString,
    }
    method_implementations = {
      ('vsperf.Controller', 'CheckDependecies'): face_utilities.unary_unary_inline(servicer.CheckDependecies),
      ('vsperf.Controller', 'CollectdInstall'): face_utilities.unary_unary_inline(servicer.CollectdInstall),
      ('vsperf.Controller', 'CollectdUploadConfig'): face_utilities.stream_unary_inline(servicer.CollectdUploadConfig),
      ('vsperf.Controller', 'DutHugepageConfig'): face_utilities.unary_unary_inline(servicer.DutHugepageConfig),
      ('vsperf.Controller', 'HostConnect'): face_utilities.unary_unary_inline(servicer.HostConnect),
      ('vsperf.Controller', 'TGenHostConnect'): face_utilities.unary_unary_inline(servicer.TGenHostConnect),
      ('vsperf.Controller', 'TGenInstall'): face_utilities.unary_unary_inline(servicer.TGenInstall),
      ('vsperf.Controller', 'TGenUploadConfigFile'): face_utilities.stream_unary_inline(servicer.TGenUploadConfigFile),
      ('vsperf.Controller', 'VsperfInstall'): face_utilities.unary_unary_inline(servicer.VsperfInstall),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Controller_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('vsperf.Controller', 'CheckDependecies'): HostInfo.SerializeToString,
      ('vsperf.Controller', 'CollectdInstall'): HostInfo.SerializeToString,
      ('vsperf.Controller', 'CollectdUploadConfig'): ConfFile.SerializeToString,
      ('vsperf.Controller', 'DutHugepageConfig'): HugepConf.SerializeToString,
      ('vsperf.Controller', 'HostConnect'): HostInfo.SerializeToString,
      ('vsperf.Controller', 'TGenHostConnect'): HostInfo.SerializeToString,
      ('vsperf.Controller', 'TGenInstall'): HostVerInfo.SerializeToString,
      ('vsperf.Controller', 'TGenUploadConfigFile'): ConfFile.SerializeToString,
      ('vsperf.Controller', 'VsperfInstall'): HostInfo.SerializeToString,
    }
    response_deserializers = {
      ('vsperf.Controller', 'CheckDependecies'): StatusReply.FromString,
      ('vsperf.Controller', 'CollectdInstall'): StatusReply.FromString,
      ('vsperf.Controller', 'CollectdUploadConfig'): UploadStatus.FromString,
      ('vsperf.Controller', 'DutHugepageConfig'): StatusReply.FromString,
      ('vsperf.Controller', 'HostConnect'): StatusReply.FromString,
      ('vsperf.Controller', 'TGenHostConnect'): StatusReply.FromString,
      ('vsperf.Controller', 'TGenInstall'): StatusReply.FromString,
      ('vsperf.Controller', 'TGenUploadConfigFile'): UploadStatus.FromString,
      ('vsperf.Controller', 'VsperfInstall'): StatusReply.FromString,
    }
    cardinalities = {
      'CheckDependecies': cardinality.Cardinality.UNARY_UNARY,
      'CollectdInstall': cardinality.Cardinality.UNARY_UNARY,
      'CollectdUploadConfig': cardinality.Cardinality.STREAM_UNARY,
      'DutHugepageConfig': cardinality.Cardinality.UNARY_UNARY,
      'HostConnect': cardinality.Cardinality.UNARY_UNARY,
      'TGenHostConnect': cardinality.Cardinality.UNARY_UNARY,
      'TGenInstall': cardinality.Cardinality.UNARY_UNARY,
      'TGenUploadConfigFile': cardinality.Cardinality.STREAM_UNARY,
      'VsperfInstall': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'vsperf.Controller', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
